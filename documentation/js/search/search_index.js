var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.173,1,2.138]],["body/controllers/AppController.html",[0,1.746,1,3.181,2,1.338,3,0.316,4,0.274,5,0.274,6,3.128,7,0.551,8,1.5,9,4.814,10,4.814,11,1.885,12,0.029,13,1.018,14,3.727,15,1.5,16,2.059,17,4.862,18,3.727,19,0.528,20,0.66,21,2.915,22,3.128,23,0.316,24,0.016,25,1.839,26,3.128,27,1.618,28,3.727,29,3.727,30,0.021,31,0.021]],["title/modules/AppModule.html",[32,1.008,33,2.138]],["body/modules/AppModule.html",[1,3.032,2,1.424,3,0.235,4,0.203,5,0.203,12,0.029,19,0.658,20,0.49,21,3.002,22,2.323,23,0.235,24,0.012,30,0.017,31,0.017,32,1.43,33,4.176,34,1.16,35,1.16,36,1.366,37,1.366,38,1.16,39,2.287,40,1.366,41,2.323,42,2.323,43,2.323,44,3.295,45,3.295,46,2.532,47,3.295,48,3.295,49,1.957,50,1.366,51,1.366,52,2.767,53,2.595,54,2.767,55,2.767,56,2.767,57,2.03,58,2.767,59,2.767,60,2.323,61,2.323,62,2.323,63,2.767,64,2.767,65,2.767,66,2.767,67,2.767,68,2.767]],["title/injectables/AppService.html",[21,1.76,69,0.802]],["body/injectables/AppService.html",[3,0.335,4,0.291,5,0.291,7,0.584,8,1.558,9,4.922,10,4.922,12,0.029,13,1.058,15,1.558,16,2.106,19,0.429,20,0.7,21,2.72,23,0.335,24,0.017,27,1.681,30,0.022,31,0.022,69,1.24,70,1.795,71,3.317,72,3.952,73,3.952,74,5.05,75,5.05,76,2.898]],["title/controllers/AuthController.html",[0,1.173,77,2.138]],["body/controllers/AuthController.html",[0,0.755,2,0.755,3,0.178,4,0.155,5,0.351,7,0.311,8,0.998,11,1.714,12,0.029,13,0.926,15,1.365,16,0.755,19,0.588,20,0.373,23,0.178,24,0.009,25,1.038,27,1.472,30,0.014,31,0.014,77,2.116,78,1.765,79,1.376,80,2.103,81,2.66,82,2.889,83,2.714,84,2.714,85,2.714,86,2.103,87,3.939,88,2.103,89,2.103,90,2.103,91,2.103,92,1.854,93,1.714,94,1.083,95,1.714,96,4.229,97,2.182,98,1.765,99,2.614,100,3.233,101,2.103,102,3.123,103,2.103,104,2.103,105,2.103,106,1.765,107,2.614,108,3.233,109,2.103,110,1.542,111,1.542,112,3.233,113,1.765,114,3.233,115,2.382,116,1.765,117,1.765,118,1.765,119,1.243,120,2.103,121,2.103,122,1.765,123,1.765,124,3.233,125,2.103,126,2.103,127,3.233,128,2.103,129,2.103,130,1.376,131,2.103,132,2.103,133,2.103,134,2.182,135,2.103,136,2.103,137,2.103,138,3.233,139,2.714,140,2.103,141,2.103,142,2.103,143,2.103,144,2.103,145,1.765,146,0.882,147,2.103,148,2.103,149,2.103,150,2.103,151,2.103,152,2.103,153,2.103,154,2.103,155,2.103,156,2.103,157,2.103,158,2.103,159,2.103]],["title/classes/AuthGuard.html",[24,0.014,119,1.931]],["body/classes/AuthGuard.html",[3,0.471,4,0.253,5,0.253,7,0.509,8,1.423,12,0.029,13,0.966,15,1.423,19,0.5,20,0.609,23,0.292,24,0.015,27,1.535,30,0.02,31,0.02,69,0.844,92,1.933,93,1.788,94,0.781,95,1.788,119,3.075,160,1.442,161,2.887,162,4.611,163,4.611,164,4.611,165,5.557,166,3.44,167,3.44,168,4.611,169,3.792,170,3.44,171,5.201,172,4.611,173,3.44,174,2.251,175,2.251,176,3.44,177,3.44,178,2.887,179,2.523]],["title/modules/AuthModule.html",[32,1.008,44,1.931]],["body/modules/AuthModule.html",[2,1.508,3,0.254,4,0.221,5,0.221,12,0.029,19,0.651,20,0.532,23,0.254,24,0.013,30,0.018,31,0.018,32,1.495,34,1.259,35,1.259,36,1.482,37,1.482,38,1.259,39,2.392,40,1.482,44,3.648,46,2.6,49,2.073,50,1.482,51,1.482,53,2.749,57,2.202,77,3.17,115,3.083,116,2.52,169,1.964,174,1.964,180,2.52,181,2.52,182,3.002,183,3.384,184,3.002,185,3.002,186,3.002,187,3.002,188,2.202,189,1.775,190,2.202,191,3.002,192,3.002,193,3.002,194,1.964,195,3.002,196,3.002,197,2.52,198,3.002,199,2.202,200,2.202,201,3.002,202,2.52,203,2.52]],["title/injectables/AuthService.html",[69,0.802,115,1.76]],["body/injectables/AuthService.html",[3,0.12,4,0.104,5,0.104,7,0.209,8,0.727,12,0.03,13,0.884,15,1.501,19,0.508,20,0.251,23,0.12,24,0.01,25,0.699,27,1.302,30,0.01,31,0.01,69,0.578,70,0.643,81,2.391,82,3.679,83,3.283,84,1.976,85,3.283,92,1.769,93,1.886,94,0.958,95,1.637,97,1.739,98,1.188,99,1.787,102,2.928,106,1.976,107,2.083,115,1.268,117,1.188,118,1.188,134,2.313,169,2.928,178,3.283,179,2.868,188,1.038,189,0.837,190,1.038,194,1.541,199,1.038,200,1.038,202,1.188,203,1.188,204,1.188,205,2.355,206,2.355,207,0.926,208,1.038,209,1.6,210,4.474,211,1.416,212,1.727,213,2.355,214,1.416,215,2.355,216,2.355,217,1.976,218,1.416,219,1.416,220,2.107,221,1.416,222,2.355,223,2.645,224,4.474,225,1.416,226,2.355,227,1.416,228,3.023,229,2.355,230,1.416,231,1.038,232,1.416,233,1.416,234,1.188,235,0.837,236,0.643,237,1.188,238,2.762,239,3.066,240,4.221,241,3.523,242,2.107,243,2.355,244,1.416,245,1.416,246,1.416,247,1.416,248,1.416,249,1.416,250,1.416,251,1.416,252,1.416,253,1.416,254,2.584,255,2.355,256,1.978,257,2.537,258,1.416,259,2.355,260,2.355,261,2.355,262,1.416,263,1.416,264,1.416,265,1.416,266,2.355,267,1.416,268,1.416,269,1.727,270,1.038,271,1.416,272,1.416,273,1.416,274,2.355,275,1.188,276,3.283,277,0.837,278,1.416,279,2.355,280,2.355,281,1.416,282,1.416,283,1.188,284,1.416,285,1.416]],["title/classes/CreateSchoolDto.html",[24,0.014,286,1.76]],["body/classes/CreateSchoolDto.html",[3,0.282,4,0.245,5,0.245,7,0.493,11,2.127,12,0.029,13,1.149,16,2.207,19,0.362,23,0.282,24,0.019,30,0.02,31,0.02,94,1.245,95,2.291,146,1.892,160,1.397,235,2.668,236,1.513,242,2.757,286,2.431,287,4.811,288,2.444,289,5.118,290,5.118,291,5.118,292,3.788,293,3.332,294,3.332,295,3.332,296,3.332,297,2.796,298,3.332,299,2.668,300,4.023,301,3.088]],["title/classes/CreateTaskDto.html",[24,0.014,302,1.931]],["body/classes/CreateTaskDto.html",[3,0.32,4,0.278,5,0.278,7,0.558,11,1.901,12,0.028,13,1.141,16,2.07,19,0.41,23,0.32,24,0.021,30,0.022,31,0.022,94,1.236,146,2.056,160,1.583,220,2.641,236,1.715,297,4.116,299,3.22,301,2.933,302,2.899,303,4.838,304,2.769,305,3.994,306,3.994,307,3.994,308,3.169,309,3.169,310,3.169]],["title/injectables/JwtStrategy.html",[69,0.802,183,1.931]],["body/injectables/JwtStrategy.html",[3,0.29,4,0.252,5,0.252,7,0.507,8,1.419,12,0.029,13,0.963,15,1.057,19,0.602,20,0.607,23,0.29,24,0.015,27,1.14,30,0.02,31,0.02,69,1.129,70,1.556,81,2.358,92,1.436,93,1.328,94,0.778,95,1.328,97,1.691,174,2.242,175,2.242,183,2.719,189,2.025,190,2.513,194,3.009,197,2.875,200,2.513,207,3.396,217,2.875,223,2.025,242,1.845,311,2.875,312,4.599,313,3.426,314,4.599,315,3.426,316,3.426,317,3.426,318,3.426,319,2.875,320,3.426,321,3.426,322,3.426,323,3.426,324,3.426,325,3.426,326,3.426,327,3.426,328,2.875,329,3.426]],["title/controllers/LatihanController.html",[0,1.173,330,2.138]],["body/controllers/LatihanController.html",[0,1.467,2,1.467,3,0.346,4,0.3,5,0.3,7,0.604,8,1.592,11,1.584,12,0.029,13,0.856,15,1.261,19,0.56,20,0.724,23,0.346,24,0.017,25,2.016,27,1.36,30,0.023,31,0.023,79,2.673,330,3.374,331,3.428,332,4.085,333,4.982,334,4.085,335,3.044,336,3.428,337,4.085,338,4.085]],["title/modules/LatihanModule.html",[32,1.008,45,1.931]],["body/modules/LatihanModule.html",[2,1.787,3,0.327,4,0.284,5,0.284,12,0.029,19,0.597,20,0.684,23,0.327,24,0.017,30,0.022,31,0.022,32,1.699,34,1.619,35,1.619,36,1.906,37,1.906,38,1.619,39,2.717,40,1.906,45,3.641,49,2.456,50,1.906,51,1.906,330,3.602,335,3.318,336,3.241,339,3.241,340,3.241,341,3.862,342,3.862]],["title/injectables/LatihanService.html",[69,0.802,335,1.76]],["body/injectables/LatihanService.html",[3,0.36,4,0.312,5,0.312,7,0.628,8,1.631,12,0.029,13,0.89,15,1.311,16,1.526,19,0.461,20,0.753,23,0.36,24,0.018,27,1.414,30,0.023,31,0.023,69,1.297,70,1.93,256,2.78,333,5.052,335,2.847,343,3.566,344,4.248,345,4.248]],["title/classes/LoginDto.html",[24,0.014,99,1.931]],["body/classes/LoginDto.html",[3,0.32,4,0.278,5,0.278,7,0.558,11,1.901,12,0.029,13,1.027,16,2.07,19,0.532,23,0.32,24,0.021,30,0.022,31,0.022,94,1.113,99,2.899,130,2.471,146,2.056,160,1.583,235,2.899,236,1.715,242,2.933,270,3.994,299,3.22,301,2.641,346,3.169,347,3.776,348,3.776,349,3.776,350,3.776,351,4.571,352,3.169,353,3.169,354,3.169,355,3.169]],["title/modules/PrismaModule.html",[32,1.008,46,1.484]],["body/modules/PrismaModule.html",[3,0.324,4,0.281,5,0.281,12,0.028,19,0.537,20,0.678,23,0.324,24,0.016,30,0.022,31,0.022,32,1.692,34,1.604,35,1.604,36,1.889,37,1.889,38,1.604,39,2.705,40,2.705,46,2.84,49,2.442,50,1.889,51,1.889,209,2.971,356,3.212,357,3.212,358,3.212,359,3.827,360,3.827]],["title/injectables/PrismaService.html",[69,0.802,209,1.484]],["body/injectables/PrismaService.html",[3,0.298,4,0.258,5,0.258,7,0.519,8,1.443,12,0.029,13,0.979,15,1.443,19,0.507,20,0.622,23,0.298,24,0.015,30,0.021,31,0.021,69,1.148,70,1.595,81,2.782,92,1.472,93,1.361,94,0.797,95,1.361,134,2.307,175,3.059,209,2.123,361,2.947,362,5.255,363,4.675,364,6,365,4.675,366,5.603,367,3.511,368,2.947,369,3.511,370,2.947,371,3.511,372,3.511,373,3.511,374,3.511]],["title/classes/RegisterDto.html",[24,0.014,107,1.931]],["body/classes/RegisterDto.html",[3,0.299,4,0.259,5,0.259,7,0.521,11,2.042,12,0.029,13,1.103,16,2.157,19,0.509,23,0.299,24,0.02,30,0.021,31,0.021,93,2.042,94,1.195,107,2.771,130,2.307,146,1.965,160,1.478,235,2.771,236,1.601,242,2.836,270,3.862,299,3.318,301,3.023,351,4.71,352,2.959,353,2.959,354,2.959,355,2.959,375,2.959,376,3.526,377,3.526,378,3.526,379,3.526,380,3.526,381,3.526]],["title/classes/School.html",[24,0.014,382,2.138]],["body/classes/School.html",[3,0.414,4,0.359,5,0.359,12,0.027,23,0.414,24,0.021,30,0.025,31,0.025,160,2.047,382,3.763,383,4.099]],["title/controllers/SchoolController.html",[0,1.173,384,2.138]],["body/controllers/SchoolController.html",[0,0.838,2,0.838,3,0.198,4,0.172,5,0.172,7,0.345,8,1.08,11,1.937,12,0.029,13,1.047,15,1.542,16,2.055,19,0.506,20,0.414,23,0.198,24,0.01,25,1.152,26,1.959,27,1.663,30,0.015,31,0.015,79,1.527,81,2.803,92,1.955,93,1.808,94,1.059,95,1.808,97,2.467,110,2.567,111,3.079,134,2.467,223,3.102,238,1.527,286,2.826,382,1.527,384,2.29,385,1.959,386,2.29,387,3.915,388,2.937,389,2.937,390,2.567,391,1.959,392,2.334,393,2.334,394,1.959,395,3.5,396,2.334,397,1.959,398,3.5,399,2.334,400,1.959,401,3.308,402,3.5,403,2.334,404,1.959,405,1.712,406,2.261,407,1.959,408,1.527,409,2.567,410,1.527,411,2.334,412,2.334,413,2.334,414,2.334,415,2.334,416,2.334,417,2.334,418,2.334,419,2.334,420,2.334]],["title/modules/SchoolModule.html",[32,1.008,47,1.931]],["body/modules/SchoolModule.html",[2,1.707,3,0.305,4,0.265,5,0.265,12,0.029,19,0.614,20,0.638,23,0.305,24,0.015,30,0.021,31,0.021,32,1.642,34,1.509,35,1.509,36,1.777,37,1.777,38,1.509,39,2.626,40,1.777,46,2.745,47,3.698,49,2.346,50,1.777,51,1.777,53,3.11,57,2.64,384,3.482,406,3.255,407,3.022,421,3.022,422,3.6,423,3.022,424,3.6,425,3.6]],["title/injectables/SchoolService.html",[69,0.802,406,1.76]],["body/injectables/SchoolService.html",[3,0.175,4,0.152,5,0.152,7,0.305,8,0.983,12,0.03,13,1.047,15,1.46,19,0.475,20,0.365,23,0.175,24,0.009,25,1.018,27,1.574,30,0.014,31,0.014,69,0.782,70,0.937,81,2.739,92,1.983,93,1.834,94,1.074,95,1.834,97,2.335,102,3.522,134,2.335,207,1.349,208,1.512,209,1.988,212,2.336,220,2.975,223,3.081,231,1.512,239,3.095,254,3.469,256,1.349,257,1.731,269,3.469,286,2.693,386,2.084,387,3.673,388,2.673,389,2.673,390,2.336,391,2.673,394,2.673,397,2.673,400,2.673,401,3.182,406,1.715,408,1.349,409,2.336,410,1.349,426,1.731,427,2.062,428,2.062,429,2.062,430,2.062,431,2.062,432,2.062,433,3.891,434,2.062,435,4.376,436,2.062,437,2.062,438,3.185,439,2.062,440,3.185,441,2.062,442,2.062]],["title/interfaces/Task.html",[443,2.138,444,2.138]],["body/interfaces/Task.html",[3,0.316,4,0.274,5,0.274,7,0.551,12,0.029,16,2.191,23,0.412,30,0.021,31,0.021,76,3.969,94,1.228,146,2.038,220,2.915,239,2.438,277,2.203,306,4.206,307,4.206,443,2.438,444,3.181,445,3.727,446,2.733,447,3.992,448,3.969,449,4.08,450,4.08,451,3.181]],["title/controllers/TaskController.html",[0,1.173,452,2.138]],["body/controllers/TaskController.html",[0,0.838,2,0.838,3,0.198,4,0.172,5,0.172,7,0.345,8,1.08,11,1.937,12,0.029,13,1.047,15,1.542,19,0.542,20,0.414,23,0.198,24,0.01,25,1.152,27,1.663,30,0.015,31,0.015,79,1.527,81,2.803,92,1.955,93,1.808,94,0.794,95,1.808,97,2.467,110,4.104,111,2.567,113,1.959,119,1.38,134,2.467,139,4.194,238,1.527,302,2.758,404,1.959,405,1.712,408,1.527,410,1.527,444,1.527,447,3.433,452,2.29,453,1.959,454,2.937,455,2.937,456,3.915,457,3.5,458,2.937,459,2.334,460,2.334,461,2.334,462,1.959,463,2.334,464,2.334,465,2.334,466,2.334,467,2.334,468,2.334,469,2.334,470,1.959,471,2.758,472,2.334,473,2.334,474,2.334,475,2.261,476,1.959,477,2.937,478,2.334,479,2.334,480,2.334,481,2.334,482,2.334,483,2.334,484,2.334,485,2.334,486,2.334,487,2.334,488,2.334,489,2.334,490,2.334,491,2.334]],["title/modules/TaskModule.html",[32,1.008,48,1.931]],["body/modules/TaskModule.html",[2,1.707,3,0.305,4,0.265,5,0.265,12,0.029,19,0.614,20,0.638,23,0.305,24,0.015,30,0.021,31,0.021,32,1.642,34,1.509,35,1.509,36,1.777,37,1.777,38,1.509,39,2.626,40,1.777,46,2.745,48,3.698,49,2.346,50,1.777,51,1.777,53,3.11,452,3.482,475,3.255,476,3.022,492,3.022,493,3.022,494,3.6,495,3.6,496,3.6,497,3.6]],["title/injectables/TaskService.html",[69,0.802,475,1.76]],["body/injectables/TaskService.html",[3,0.143,4,0.124,5,0.124,7,0.249,8,0.837,12,0.03,13,0.96,15,1.547,19,0.523,20,0.481,23,0.143,24,0.007,27,1.427,30,0.012,31,0.012,69,0.666,70,0.764,81,2.624,82,1.234,92,1.797,93,1.776,94,0.973,95,1.662,96,2.86,97,2.116,102,3.821,134,2.116,169,1.101,207,1.774,208,1.234,209,1.775,212,1.989,220,2.788,223,2.709,231,1.234,237,2.276,238,2.557,239,2.804,242,0.906,254,3.143,256,1.101,269,3.143,275,1.412,276,3.28,277,2.849,283,1.412,302,2.31,305,1.989,386,1.774,390,1.989,405,2.499,408,1.101,410,1.101,447,3.281,454,2.276,455,2.276,456,3.28,458,2.276,462,2.276,470,2.276,471,2.31,475,1.461,477,2.276,498,1.412,499,2.712,500,1.682,501,2.712,502,1.682,503,1.682,504,1.682,505,2.712,506,1.682,507,1.682,508,1.682,509,1.412,510,1.682,511,1.682,512,2.712,513,3.908,514,2.712,515,1.682,516,3.908,517,1.682,518,1.682,519,1.682,520,2.712,521,1.682,522,2.712,523,1.682,524,1.682]],["title/classes/UpdateSchoolDto.html",[24,0.014,401,1.931]],["body/classes/UpdateSchoolDto.html",[3,0.362,4,0.314,5,0.314,12,0.029,19,0.626,23,0.362,24,0.023,30,0.023,31,0.023,160,1.79,175,2.794,235,2.524,236,1.939,286,2.3,288,3.131,299,2.524,300,3.131,301,2.3,386,2.794,401,3.134,409,3.131,525,3.584,526,4.27,527,3.584,528,3.584,529,4.27]],["title/classes/UpdateTaskDto.html",[24,0.014,471,1.931]],["body/classes/UpdateTaskDto.html",[3,0.32,4,0.278,5,0.278,7,0.558,11,1.901,12,0.028,13,1.141,16,2.07,19,0.41,23,0.32,24,0.021,30,0.022,31,0.022,94,1.236,146,2.056,160,1.583,220,2.641,236,1.715,292,4.116,300,3.994,301,2.933,304,2.769,305,3.994,306,3.994,307,3.994,308,3.169,309,3.169,310,3.169,471,2.899,530,4.838]],["title/coverage.html",[531,3.266]],["body/coverage.html",[0,1.89,1,1.732,5,0.195,6,2.221,12,0.029,21,1.426,24,0.025,30,0.017,31,0.017,38,1.109,69,1.39,71,2.221,77,1.732,78,2.221,94,0.601,99,1.565,107,1.565,115,1.426,119,1.565,161,2.221,179,1.941,183,1.565,189,1.565,204,2.221,209,1.202,277,1.565,286,1.426,287,2.221,288,2.816,302,1.565,303,2.221,304,2.816,311,2.221,330,1.732,331,2.221,335,1.426,343,2.221,346,2.221,361,2.221,375,2.221,382,1.732,383,2.221,384,1.732,385,2.221,401,1.565,406,1.426,426,2.221,443,1.732,444,1.732,446,2.816,452,1.732,453,2.221,471,1.565,475,1.426,498,2.221,525,2.221,530,2.221,531,1.941,532,2.647,533,2.647,534,2.647,535,6.506,536,5.49,537,3.84,538,2.647,539,2.647,540,4.957,541,2.221,542,3.84,543,5.264,544,3.84,545,2.221,546,2.647,547,3.84,548,2.647,549,2.647,550,2.647,551,2.647,552,2.647]],["title/dependencies.html",[35,1.647,553,2.292]],["body/dependencies.html",[12,0.03,20,0.684,24,0.021,30,0.022,31,0.022,35,1.619,60,3.241,61,3.241,122,3.241,123,3.241,130,2.527,174,2.527,188,2.832,194,2.527,234,3.241,236,1.754,319,4.176,370,3.241,509,3.241,527,3.241,528,3.241,554,5.505,555,3.862,556,3.862,557,3.862,558,3.862,559,3.862,560,3.862,561,3.862,562,3.862,563,3.862,564,3.862,565,3.862,566,3.862,567,3.862,568,3.862,569,3.862,570,3.862]],["title/miscellaneous/functions.html",[571,1.787,572,3.297]],["body/miscellaneous/functions.html",[7,0.731,12,0.025,30,0.025,31,0.025,38,2.575,545,4.146,571,3.233,572,4.146,573,4.94]],["title/index.html",[7,0.404,574,2.731,575,2.731]],["body/index.html",[4,0.244,12,0.029,30,0.02,31,0.02,62,2.785,368,2.785,451,2.172,531,2.434,576,3.319,577,3.319,578,4.501,579,3.319,580,3.319,581,3.319,582,3.319,583,3.319,584,3.319,585,5.108,586,3.319,587,3.319,588,3.319,589,3.319,590,6.037,591,3.319,592,3.319,593,5.903,594,3.319,595,3.319,596,4.501,597,3.319,598,3.319,599,3.319,600,3.319,601,4.501,602,4.501,603,3.319,604,3.319,605,3.319,606,4.501,607,4.501,608,3.319,609,3.319,610,3.319,611,3.319,612,3.319,613,2.785,614,3.319,615,3.319,616,3.319,617,3.319,618,3.319,619,3.319,620,3.319,621,3.319,622,3.319,623,2.785,624,3.319,625,3.319,626,3.319,627,3.319,628,3.319,629,3.319,630,2.785]],["title/modules.html",[34,1.867]],["body/modules.html",[12,0.024,30,0.024,31,0.024,33,2.851,34,1.827,44,2.576,45,2.576,46,1.979,47,2.576,48,2.576,613,5.331,631,6.352,632,6.352,633,6.352]],["title/overview.html",[634,3.738]],["body/overview.html",[2,1.045,12,0.029,21,2.566,30,0.018,31,0.018,32,0.898,33,4.158,34,1.22,35,1.22,36,1.436,37,1.436,38,1.22,39,1.436,40,1.436,41,2.442,42,2.442,43,2.442,44,3.576,45,3.228,46,2.747,47,3.443,48,3.443,49,2.028,50,1.436,51,1.436,70,1.322,115,2.566,160,1.22,180,2.442,181,2.442,183,2.816,209,2.645,335,2.566,339,2.442,340,2.442,356,2.442,357,2.442,358,2.442,406,2.566,421,2.442,423,2.442,443,1.904,448,2.134,475,2.566,492,2.442,493,2.442,634,2.442,635,2.91,636,2.91,637,2.91,638,2.91]],["title/properties.html",[146,1.647,553,2.292]],["body/properties.html",[12,0.029,30,0.025,31,0.025,146,2.035,451,3.177,623,4.075,630,4.075,639,4.856,640,4.856,641,4.856]],["title/miscellaneous/variables.html",[571,1.787,642,3.297]],["body/miscellaneous/variables.html",[7,0.59,12,0.029,30,0.022,31,0.022,76,4.099,94,1.153,145,3.348,189,3.003,199,2.926,277,3.003,328,3.348,446,2.926,447,3.324,448,4.099,449,4.263,450,4.263,451,3.324,541,3.348,571,2.61,642,3.348,643,3.989,644,3.989,645,5.08,646,5.08,647,3.989,648,3.989]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":640,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":448,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["3/7",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":636,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":635,"title":{},"body":{"overview.html":{}}}],["7",{"_index":637,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":638,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["abcdefghij",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["amazing",{"_index":614,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth(\"accesstoken",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":351,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":347,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":349,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":378,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":376,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(6)@maxlength(20",{"_index":380,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apitags",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":368,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":374,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":584,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":77,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":119,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":173,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":176,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":623,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":115,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":615,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["binary",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":631,"title":{},"body":{"modules.html":{}}}],["building",{"_index":579,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":162,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":164,"title":{},"body":{"classes/AuthGuard.html":{}}}],["cb",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":24,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":160,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":339,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":340,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":356,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":357,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":358,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":421,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":422,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":423,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":492,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":494,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":493,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":167,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('latihan",{"_index":337,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('school",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":531,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":412,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":433,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":286,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":501,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":302,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["data/task",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataschool",{"_index":435,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["datauser",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":405,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:task_id",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleteschool",{"_index":440,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetask",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":462,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":451,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":592,"title":{},"body":{"index.html":{}}}],["dihapus",{"_index":442,"title":{},"body":{"injectables/SchoolService.html":{}}}],["diskstorage",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":408,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":410,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":603,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":580,"title":{},"body":{"index.html":{}}}],["email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":365,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":171,"title":{},"body":{"classes/AuthGuard.html":{}}}],["executioncontext",{"_index":165,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":175,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.originalname",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["find",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["findall",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":415,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":578,"title":{},"body":{"index.html":{}}}],["function",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":572,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('hello2",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('profile",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello2",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":333,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":499,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskbyid(task_id",{"_index":505,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskid",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskid(@param('task_id",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskid(task_id",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{}}}],["getting",{"_index":574,"title":{"index.html":{}},"body":{}}],["grow",{"_index":610,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":163,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":168,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password,12",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":620,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(\"user",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":627,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":305,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["if(checkpassword",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(checkuser",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(createuser",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(datauser",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":371,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":518,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":366,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":69,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":589,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":591,"title":{},"body":{"index.html":{}}}],["interface",{"_index":443,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{}}}],["isnotempty",{"_index":299,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{}}}],["isoptional",{"_index":300,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":301,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":297,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{}}}],["isstring()@isoptional",{"_index":292,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":294,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["join",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":183,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":624,"title":{},"body":{"index.html":{}}}],["latihan",{"_index":332,"title":{},"body":{"controllers/LatihanController.html":{}}}],["latihan.controller",{"_index":342,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":336,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":330,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":45,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":335,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":630,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":607,"title":{},"body":{"index.html":{}}}],["login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(data:logindto",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":99,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["match",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":352,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":355,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["message:\"latihan",{"_index":345,"title":{},"body":{"injectables/LatihanService.html":{}}}],["metadata",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":353,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":354,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":571,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":606,"title":{},"body":{"index.html":{}}}],["mode",{"_index":596,"title":{},"body":{"index.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":619,"title":{},"body":{"index.html":{}}}],["multer",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":625,"title":{},"body":{"index.html":{}}}],["name",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":585,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":629,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":527,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":174,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["new",{"_index":179,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["node.js",{"_index":577,"title":{},"body":{"index.html":{}}}],["number",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":608,"title":{},"body":{"index.html":{}}}],["optional",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":634,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":553,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["parameters",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":526,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":529,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":404,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":617,"title":{},"body":{"index.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":360,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":370,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{}}}],["prismaclient",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":46,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":209,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":598,"title":{},"body":{"index.html":{}}}],["profile",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile(user_id:number",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":576,"title":{},"body":{"index.html":{}}}],["project",{"_index":609,"title":{},"body":{"index.html":{}}}],["properties",{"_index":146,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["read",{"_index":618,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":107,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":419,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":397,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":588,"title":{},"body":{"index.html":{}}}],["req",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":593,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":581,"title":{},"body":{"index.html":{}}}],["schema",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":382,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["school.controller",{"_index":425,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":409,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:12",{"_index":295,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:16",{"_index":293,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:20",{"_index":296,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:7",{"_index":298,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":407,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":291,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":384,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":47,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":406,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":582,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":583,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":612,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:8",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":161,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":166,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:14",{"_index":170,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:114",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:144",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:47",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":346,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:16",{"_index":350,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:9",{"_index":348,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":375,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:10",{"_index":379,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:16",{"_index":377,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:23",{"_index":381,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":331,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:10",{"_index":334,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":341,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":343,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:6",{"_index":344,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":497,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":359,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":367,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":369,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":525,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":383,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:11",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:16",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:21",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:26",{"_index":403,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:31",{"_index":399,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":424,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:22",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:31",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:43",{"_index":432,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:56",{"_index":431,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":446,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":303,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":530,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:14",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:20",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:26",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:32",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:38",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":495,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":498,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":500,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:23",{"_index":502,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:34",{"_index":504,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:57",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:76",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:96",{"_index":503,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":594,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":597,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":599,"title":{},"body":{"index.html":{}}}],["started",{"_index":575,"title":{"index.html":{}},"body":{}}],["starter",{"_index":587,"title":{},"body":{"index.html":{}}}],["statements",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":621,"title":{},"body":{"index.html":{}}}],["storage",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["sudah",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["sukses",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["super",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":177,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":613,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":632,"title":{},"body":{"modules.html":{}}}],["table",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":444,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["task.controller",{"_index":496,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":304,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:13",{"_index":309,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":308,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":310,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":306,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["task_description:\"task",{"_index":450,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":447,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":307,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["task_name:\"task",{"_index":449,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":452,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":48,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":475,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["terdaftar",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["test",{"_index":602,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":605,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":604,"title":{},"body":{"index.html":{}}}],["tests",{"_index":601,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":611,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":372,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":373,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello2",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.id,'/upload/image/'+file.filename",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":338,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.schools.create",{"_index":434,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":441,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":437,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":436,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":439,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":519,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":413,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":414,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":420,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":178,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":622,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":628,"title":{},"body":{"index.html":{}}}],["type",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":528,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":586,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":172,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('avatar",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":600,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":641,"title":{},"body":{"properties.html":{}}}],["update",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["update(@param('id",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateschool",{"_index":438,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":401,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":520,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskbyid",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":471,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":169,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["user_id",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":642,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":639,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":595,"title":{},"body":{"index.html":{}}}],["website",{"_index":626,"title":{},"body":{"index.html":{}}}],["world",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":590,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":616,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello2')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('hello2')\n  getHello2(): string {\n    return this.appService.getHello2();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    LatihanModule, TaskModule, PrismaModule, AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello2\n                        \n                    \n                \n            \n            \n                \ngetHello2()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n  getHello2(): string {\n    return 'Hello World 2!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags(\"Auth\")\n@Controller('auth')\nexport class AuthController {\n    authService: any;\n\n    constructor(private AuthService: AuthService){}\n\n    @Post('register')\n    async register(@Body() data: RegisterDto) {\n        return await this.AuthService.register(data);\n    }\n\n    @Post('login')\n    async login(@Body() data: LoginDto) {\n        return await this.AuthService.login(data);\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @Get('profile')\n    async profile(@Req() req) {\n        return await this.AuthService.profile(req.user.id);\n    }\n\n    @ApiBearerAuth(\"accessToken\")\n    @UseGuards(AuthGuard)\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({\n        schema: {\n            type: 'object',\n            properties: {\n                avatar: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })\n    @UseInterceptors(\n        FileInterceptor('avatar', {\n            storage: diskStorage({\n                destination: 'public/uploads/image',\n                filename: (req, file, cb) => {\n                    cb(null, file.originalname);\n                },\n            }),\n        }),\n    )\n    @Post('avatar')\n    async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n        return await this.AuthService.uploadAvatar(req.user.id,'/upload/image/'+file.filename);\n    }\n    \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\n\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:144\n                \n            \n\n\n            \n                \n                    Generate JWT Token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n                    Login a User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n                    Find user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n                    Register a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:114\n                \n            \n\n\n            \n                \n                    Upload Avatar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { RegisterDto } from './dto/register.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { IsEmail } from 'class-validator';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma : PrismaService, private jwtService: JwtService) {}\n\n    /**\n     * Register a user\n     * @param data \n     * @returns \n     */\n    async register(data: RegisterDto){\n        const checkUser = await this.prisma.users.findFirst({\n            where:{\n                email: data.email\n            }\n        });\n\n    if(checkUser){\n        throw new HttpException(\"User sudah terdaftar\", HttpStatus.FOUND);\n    }\n    data.password = await hash(data.password,12);\n    const createUser = await this.prisma.users.create({\n        data\n    });\n\n    if(createUser){\n        return{\n            statusCode: HttpStatus.OK,\n            message: \"Register Berhasil\",\n        };\n    }\n    }\n\n    /**\n     * Login a User\n     * @param data \n     * @returns \n     */\n    async login(data:LoginDto){\n       const checkUser = await this.prisma.users.findFirst({\n        where:{\n            email: data.email\n        }\n       }) ;\n\n    if (!checkUser) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if(checkPassword){\n\n        const accessToken = this.generateJWT({\n            sub: checkUser. id,\n            name: checkUser. name,\n            email: checkUser. email,\n        })\n\n        return{\n            statusCode: 200,\n            accessToken,\n            message: \"Login berhasil\",\n        };  \n    } else {\n        throw new HttpException(\n            'User or password not match', \n            HttpStatus.UNAUTHORIZED,\n            );\n    }\n  }\n\n /**\n  * Find user by id\n  * @param user_id \n  */\n  async profile(user_id:number){\n    const dataUser = await this.prisma.users.findFirst({\n        where:{\n            id: user_id\n        },\n        select:{\n            id: true,\n            name: true,\n            email: true,\n            avatar: true,\n            tasks: true\n        },\n    });\n    if(dataUser){\n        return{\n            statusCode: HttpStatus.OK,\n            data: dataUser\n        }\n    }\n\n    throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n  }\n\n  /**\n   * Upload Avatar\n   * @param user_id \n   * @param avatar \n   * @returns \n   */\n  async uploadAvatar(user_id: number, avatar) {\n    const checkUserExists = await this.prisma.users.findFirst({\n        where: {\n            id: user_id,\n        },\n    });\n    if (checkUserExists) {\n        const updateAvatar = await this.prisma.users.update({\n            data: {\n                avatar: avatar,\n            },\n            where: {\n                id: user_id,\n            },\n        });\n        if (updateAvatar) {\n            return {\n                statusCode: 200,\n                message: 'Upload avatar berhasil',\n            };\n        }\n    }\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n\n  /**\n   * Generate JWT Token\n   * @param payload \n   * @returns \n   */\n generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n        secret: jwt_config.secret,\n        expiresIn: jwt_config.expired,\n    });\n\n }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSchoolDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string;\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string;\n\n    @IsString()\n    @IsOptional()\n    address?: string;\n\n    @IsString()\n    @IsOptional()\n    phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateTaskDto{\n\n    id_user: number;\n    \n    @IsString()\n    @IsNotEmpty()\n    task_name: string;\n\n    @IsString()\n    @IsNotEmpty()\n    task_description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/config_jwt\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret\n        });\n    }\n\n    async validate(payload: any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp,\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getlatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getlatihan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getlatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/latihan/latihan.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n\n    constructor(private latihanService: LatihanService){}\n\n    @Get()\n    getlatihan() {\n        return this.latihanService.getLatihan;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService]\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n            \n                \n                    Defined in src/latihan/latihan.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n\n    getLatihan(){\n        return{\n            message:\"Latihan\"\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class LoginDto {\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        this.$on('beforeExit', async () => {\n            await app.close();\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\n\nexport class RegisterDto {\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService]\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n\n  constructor(private prisma: PrismaService){}\n async create(createSchoolDto: CreateSchoolDto) {\n    const createSchool = await this.prisma.schools.create({\n      data: createSchoolDto,\n    });\n    if (createSchool) {\n      return {\n        statusCode: 200,\n        data: createSchool,\n      };\n    }\n  }\n\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany();\n    return {\n      statusCode: 200,\n      data: dataSchool,\n    };\n\n  }\n\n  async findOne(id: number) {\n    const dataSchool = await this.prisma.schools.findFirst({\n      where: {\n        id,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: dataSchool,\n    };\n  }\n\n async  update(id: number, updateSchoolDto: UpdateSchoolDto) {\n  const updateSchool = await this.prisma.schools.update({\n    data: updateSchoolDto,\n    where:{\n      id: id,\n    },\n  });\n  return {\n    statusCode: 200,\n    data: updateSchool,\n  }\n}\n\n  async remove(id: number) {\n    const deleteSchool = await this.prisma.schools.delete({\n      where:{\n        id\n      }\n    });\n    return {\n      statusCode: 200,\n      data: deleteSchool,\n      message: ' Data berhasil dihapus',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task{\n    task_id: number;\n    task_name: string;\n    task_description: string;\n}\nexport const tasks = [\n    {\n        task_id: 1,\n        task_name:\"Task 1\",\n        task_description:\"Task 1 Description\"\n    },\n    {\n        task_id: 2,\n        task_name:\"Task 2\",\n        task_description:\"Task 2 Description\"\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskId\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Put, UseGuards, } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n\n@Controller('task')\nexport class TaskController {\n    constructor(private taskService: TaskService) {}\n\n    @UseGuards(AuthGuard)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto) {\n        return await this.taskService.createTask(body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getAllTask() {\n        return await this.taskService.getAllTask();\n    }\n\n    @UseGuards(AuthGuard)\n    @Get('/:task_id')\n    async getTaskId(@Param('task_id') task_id){\n        return await this.taskService.getTaskById(+task_id);\n    }\n\n    @UseGuards(AuthGuard)\n    @Patch('/:task_id')\n    async updateTaskById(@Param('task_id') task_id, @Body() body : UpdateTaskDto){\n        return await this.taskService.updateTaskById(+task_id, body);\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete('/:task_id')\n    async deleteTaskById(@Param('task_id') task_id) {\n        return await this.taskService.deleteTaskById(+task_id);\n    }\n    \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService]\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:23\n                \n            \n\n\n            \n                \n                    Create Tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:96\n                \n            \n\n\n            \n                \n                    Delete Tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:76\n                \n            \n\n\n            \n                \n                    Update Tasks By Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { tasks } from './data/task';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\nimport { Inject } from '@nestjs/common';\n\n@Injectable()\nexport class TaskService {\n\n    constructor (\n        private prisma: PrismaService,\n        @Inject(REQUEST) private req: any,\n    ) {}\n    \n\n    /**\n     * Create Tasks\n     * @param data \n     * @returns \n     */\n    async createTask(data: CreateTaskDto) {\n        data.id_user = this.req.user.id;\n        const createData = await this.prisma.tasks.create({\n         data: data,\n        });\n        return {\n         statusCode: 200,\n         data: createData,\n        };\n     }\n\n     async getAllTask(){\n        const dataTask = await this.prisma.tasks.findMany({\n            where: {\n                id_user: this.req.user.id,\n            },\n            include: {\n                user: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        avatar: true\n                    }\n                }\n            }\n            \n        });\n        return {\n             statusCode: 200,\n             data: dataTask,\n        };\n     }\n\n     async getTaskById(task_id: number) {\n        const dataTask = await this.prisma.tasks.findFirst({\n            where: {\n                id: task_id,\n                id_user: this.req.user.id\n            },\n        });\n        return {\n            statusCode: 200,\n            data: dataTask,\n        }; \n    }\n\n    /**\n     * Update Tasks By Id\n     * @param task_id \n     * @param data \n     * @returns \n     */\n    async updateTaskById(task_id: number, data: UpdateTaskDto) {\n        data.id_user = this.req.user.id;\n        const updateTask = await this.prisma.tasks.update({\n            where: {\n                id: task_id,\n            },\n            data: data,\n        });\n        return {\n            statusCode: 200,\n            data: updateTask,\n        };\n        \n    }\n    \n    /**\n     * Delete Tasks \n     * @param task_id \n     * @returns \n     */\n    async deleteTaskById(task_id: number){\n        const deleteTask = await this.prisma.tasks.delete({\n            where: {\n                id: task_id,\n            },\n        });\n        return {\n            statusCode: 200,\n            data: deleteTask,\n            message: 'sukses delete data',\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\nimport { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {\n\n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\n\nexport class UpdateTaskDto{\n\n    id_user: number;\n    \n    @IsString()\n    @IsOptional()\n    task_name: string;\n\n    @IsString()\n    @IsOptional()\n    task_description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                42 %\n                (3/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @nestjs/swagger : ^7.0.1\n        \n            @prisma/client : ^4.15.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                        \n                            tasks   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'abcdefghij',\n    expired: 3600\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id: 1,\n        task_name:\"Task 1\",\n        task_description:\"Task 1 Description\"\n    },\n    {\n        task_id: 2,\n        task_name:\"Task 2\",\n        task_description:\"Task 2 Description\"\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
